{
  "address": "0x814DB066200B051ACdfA655DDf3d86c5c5b04A94",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_defaultFeeManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeManager",
          "type": "address"
        }
      ],
      "name": "FeeManagerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "project",
          "type": "address"
        }
      ],
      "name": "FeeManagerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_FEE_MANAGER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeManager",
          "type": "address"
        }
      ],
      "name": "addFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        }
      ],
      "name": "fetchVerifyFeeManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "project",
          "type": "address"
        }
      ],
      "name": "removeFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x304a38677a30de2883f8df278cb77ee70ba794cfc95e5521e7ad68d0a7988dad",
  "receipt": {
    "to": null,
    "from": "0x8896780a7912829781f70344Ab93E589dDdb2930",
    "contractAddress": "0x814DB066200B051ACdfA655DDf3d86c5c5b04A94",
    "transactionIndex": 0,
    "gasUsed": "581252",
    "logsBloom": "0x00000000000000000000000000000000000010000000000000000000000000004000000000000000002000000000000000000000000000000000000000000000000000000000008000000000000000000000000008000000000000000000000000000000000000000800000000000001000000000000000000000000000000000000000000000000000202000000000000000000000000000000000040000000000000000000000000000000000800000000000000010000000000000000000080000000080000000000200000000000000000000000001000000000000000000000000000000000000000000200000000000000000000000000000010000000",
    "blockHash": "0x4075d763043728bc58561537101f83d7359efbb161ff9f42c4118d75033dfe81",
    "transactionHash": "0x304a38677a30de2883f8df278cb77ee70ba794cfc95e5521e7ad68d0a7988dad",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 18670605,
        "transactionHash": "0x304a38677a30de2883f8df278cb77ee70ba794cfc95e5521e7ad68d0a7988dad",
        "address": "0x814DB066200B051ACdfA655DDf3d86c5c5b04A94",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008896780a7912829781f70344ab93e589dddb2930"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x4075d763043728bc58561537101f83d7359efbb161ff9f42c4118d75033dfe81"
      }
    ],
    "blockNumber": 18670605,
    "cumulativeGasUsed": "581252",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB72Cfa20472e6a3d4e30BA66FE6Be4CBB3ED1953"
  ],
  "numDeployments": 2,
  "solcInputHash": "bf054293f17c51a4b6f1c7a16627fb4f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defaultFeeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"FeeManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"}],\"name\":\"FeeManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_FEE_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"addFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"}],\"name\":\"fetchVerifyFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"project\",\"type\":\"address\"}],\"name\":\"removeFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VerifyFeeSelector.sol\":\"VerifyFeeSelector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/VerifyFeeSelector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {IVerifyFeeSelector} from \\\"./interface/IVerifyFeeSelector.sol\\\";\\n\\ncontract VerifyFeeSelector is IVerifyFeeSelector, Ownable {\\n    event FeeManagerAdded(address indexed project, address indexed feeManager);\\n    event FeeManagerRemoved(address indexed project);\\n\\n    address public immutable DEFAULT_FEE_MANAGER;\\n\\n    mapping(address => address) feeManagerForProject;\\n\\n    constructor(address _defaultFeeManager) {\\n        DEFAULT_FEE_MANAGER = _defaultFeeManager;\\n    }\\n\\n    function fetchVerifyFeeManager(address project) external view returns (address) {\\n        address feeManager = feeManagerForProject[project];\\n\\n        if (feeManager == address(0)) {\\n            feeManager = DEFAULT_FEE_MANAGER;\\n        }\\n\\n        return feeManager;\\n    }\\n\\n    function addFeeManager(address project, address feeManager) external onlyOwner {\\n        require(project != address(0), \\\"Project cannot be null address\\\");\\n        require(feeManager != address(0), \\\"FeeManager cannot be null address\\\");\\n\\n        feeManagerForProject[project] = feeManager;\\n\\n        emit FeeManagerAdded(project, feeManager);\\n    }\\n\\n    function removeFeeManager(address project) external onlyOwner {\\n        require(feeManagerForProject[project] != address(0), \\\"Project has no fee manager\\\");\\n\\n        // Set it to the address(0)\\n        feeManagerForProject[project] = address(0);\\n\\n        emit FeeManagerRemoved(project);\\n    }\\n}\\n\",\"keccak256\":\"0xf548de27ad76cc8ff0c9da3771b927ad00afa6a78d3fa75342b55bacb4c57364\",\"license\":\"MIT\"},\"contracts/interface/IVerifyFeeSelector.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IVerifyFeeSelector {\\n    function fetchVerifyFeeManager(address project) external view returns (address);\\n}\\n\",\"keccak256\":\"0xc082c6af96b2b343bb9701b07c358b8ee9d2026c8ec75713bd5c28c28df1ef25\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516107b13803806107b183398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b6080516106c66100eb60003960008181610111015261017801526106c66000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db5780638e778864146100f9578063942dfc481461010c578063f2fde38b1461013357600080fd5b80633245b62214610082578063715018a6146100be5780638115c9cc146100c8575b600080fd5b61009561009036600461063b565b610146565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100c661019e565b005b6100c66100d636600461063b565b6101b2565b60005473ffffffffffffffffffffffffffffffffffffffff16610095565b6100c661010736600461065d565b6102c1565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6100c661014136600461063b565b610465565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152600160205260408120549091168061019857507f00000000000000000000000000000000000000000000000000000000000000005b92915050565b6101a661051c565b6101b0600061059d565b565b6101ba61051c565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600160205260409020541661024d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f6a65637420686173206e6f20666565206d616e6167657200000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055517fc504b68859e849248ade75526558241afc96c48cddbae13b2ae85ff21d1339259190a250565b6102c961051c565b73ffffffffffffffffffffffffffffffffffffffff8216610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f6a6563742063616e6e6f74206265206e756c6c206164647265737300006044820152606401610244565b73ffffffffffffffffffffffffffffffffffffffff81166103e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4665654d616e616765722063616e6e6f74206265206e756c6c2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610244565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517f0d8a54eaab425bca8069cb2d2fef755e09c846863425ae4047bdc78467a895319190a35050565b61046d61051c565b73ffffffffffffffffffffffffffffffffffffffff8116610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610244565b6105198161059d565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610244565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461063657600080fd5b919050565b60006020828403121561064d57600080fd5b61065682610612565b9392505050565b6000806040838503121561067057600080fd5b61067983610612565b915061068760208401610612565b9050925092905056fea26469706673582212201eb19cc9b91db8fbbc420083b1805b22e42b5f96b2a5a5bd4fa0ee47c3824bd464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100db5780638e778864146100f9578063942dfc481461010c578063f2fde38b1461013357600080fd5b80633245b62214610082578063715018a6146100be5780638115c9cc146100c8575b600080fd5b61009561009036600461063b565b610146565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100c661019e565b005b6100c66100d636600461063b565b6101b2565b60005473ffffffffffffffffffffffffffffffffffffffff16610095565b6100c661010736600461065d565b6102c1565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6100c661014136600461063b565b610465565b73ffffffffffffffffffffffffffffffffffffffff8082166000908152600160205260408120549091168061019857507f00000000000000000000000000000000000000000000000000000000000000005b92915050565b6101a661051c565b6101b0600061059d565b565b6101ba61051c565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600160205260409020541661024d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726f6a65637420686173206e6f20666565206d616e6167657200000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055517fc504b68859e849248ade75526558241afc96c48cddbae13b2ae85ff21d1339259190a250565b6102c961051c565b73ffffffffffffffffffffffffffffffffffffffff8216610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f50726f6a6563742063616e6e6f74206265206e756c6c206164647265737300006044820152606401610244565b73ffffffffffffffffffffffffffffffffffffffff81166103e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4665654d616e616765722063616e6e6f74206265206e756c6c2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610244565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517f0d8a54eaab425bca8069cb2d2fef755e09c846863425ae4047bdc78467a895319190a35050565b61046d61051c565b73ffffffffffffffffffffffffffffffffffffffff8116610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610244565b6105198161059d565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610244565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461063657600080fd5b919050565b60006020828403121561064d57600080fd5b61065682610612565b9392505050565b6000806040838503121561067057600080fd5b61067983610612565b915061068760208401610612565b9050925092905056fea26469706673582212201eb19cc9b91db8fbbc420083b1805b22e42b5f96b2a5a5bd4fa0ee47c3824bd464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/VerifyFeeSelector.sol:VerifyFeeSelector",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4824,
        "contract": "contracts/VerifyFeeSelector.sol:VerifyFeeSelector",
        "label": "feeManagerForProject",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}